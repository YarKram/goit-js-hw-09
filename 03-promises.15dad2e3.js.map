{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAG9BC,GAFmBF,SAASC,cAAc,UAE/B,IACjB,IAAIE,EAAa,EACbC,EAAQ,EACRC,EAAS,EACTC,EAAO,EAEXP,EAAKQ,iBAAiB,SAgBtB,SAAsBC,GAOpB,GANAN,EAASM,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MAEvCR,EAAaS,OAAOV,EAASW,OAC7BP,EAAOM,OAAOV,EAASY,MACvBT,EAASO,OAAOV,EAASa,QAErBZ,EAAa,GAAKG,EAAO,GAAKD,EAAS,EAEzC,YADAW,EAAAnB,GAASoB,OAAOC,QAAQ,oC,IAvB5BnB,EAAKQ,iBAAiB,UA4BtB,SAAkBC,GAChBA,EAAIW,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAQe,IAC1BC,YAAW,KA9Bf,IAAuBC,EAAUC,GAAVD,EA+BHF,EAAI,EA/BSG,EA+BNpB,EAAaiB,EAAId,EA9BnC,IAAIkB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EAEFF,EAAQ,C,SAAEH,EAAUT,MAAAU,IAGpBG,EAAO,C,SAAEJ,EAAUT,MAAAU,GAAQ,KAwBxBO,MAAK,EAACR,SAAEA,EAAUT,MAAAkB,MACjBf,EAAAnB,GAASoB,OAAOe,QACd,uBAAqBV,QAAiBS,MAAU,IAGnDE,OAAM,EAACX,SAAEA,EAAUT,MAAAqB,MAClBlB,EAAAnB,GAASoB,OAAOC,QACd,sBAAoBI,QAAeY,MAAU,GAE/C,GACH9B,GAEHA,GAAgBE,EAGlBP,EAAKoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\n\nconst formData = {};\nlet firstDelay = 0;\nlet delay = 0;\nlet amount = 0;\nlet step = 0;\n\nform.addEventListener('input', onInputValue);\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction onInputValue(evt) {\n  formData[evt.target.name] = evt.target.value;\n\n  firstDelay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n\n  if (firstDelay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('the number must be more than zero');\n    return;\n  }\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n    setTimeout(() => {\n      createPromise(i + 1, firstDelay + i * step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delay);\n\n    delay = delay + step;\n  }\n\n  form.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$step","addEventListener","evt","target","name","value","Number","delay","step","amount","$parcel$interopDefault","Notify","failure","preventDefault","i","setTimeout","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","then","delay2","success","catch","delay3","reset"],"version":3,"file":"03-promises.15dad2e3.js.map"}