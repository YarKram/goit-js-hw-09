{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAG9BC,GAFmBF,SAASC,cAAc,UAE/B,IACbE,EAAa,EACbC,EAAQ,EACRC,EAAS,EACTC,EAAO,EAEXP,EAAKQ,iBAAiB,SAgBtB,SAAsBC,GAOpB,GANAN,EAASM,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MAEvCR,EAAaS,OAAOV,EAASW,OAC7BP,EAAOM,OAAOV,EAASY,MACvBT,EAASO,OAAOV,EAASa,QAErBZ,EAAa,GAAKG,EAAO,GAAKD,EAAS,EAEzC,YADAW,EAAAnB,GAASoB,OAAOC,QAAQ,oC,IAvB5BnB,EAAKQ,iBAAiB,UA4BtB,SAAkBC,G,kBAIdW,YAAW,WA9Bf,IAAuBC,EAAUC,GAAVD,EA+BHE,EAAI,EA/BSD,EA+BNlB,EAAamB,EAAIhB,EA9BnC,IAAIiB,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEJ,WAAUP,MAAAQ,IAGpBI,EAAO,CAAEL,WAAUP,MAAAQ,G,KAwBhBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALhB,MACjBG,EAAAnB,GAASoB,OAAOc,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANF,EAAM,M,IAGjDG,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUc,EAAKL,EAALhB,MAClBG,EAAAnB,GAASoB,OAAOC,QACd,sBAAqCc,OAAfZ,EAAS,QAAYY,OAANE,EAAM,M,MAGhD9B,GAEHA,GAAgBE,C,EAjBlBE,EAAI2B,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAQ+B,IAAGC,EAAAD,GAkB/BrC,EAAKuC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\n\nconst formData = {};\nlet firstDelay = 0;\nlet delay = 0;\nlet amount = 0;\nlet step = 0;\n\nform.addEventListener('input', onInputValue);\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction onInputValue(evt) {\n  formData[evt.target.name] = evt.target.value;\n\n  firstDelay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n\n  if (firstDelay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('the number must be more than zero');\n    return;\n  }\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n    setTimeout(() => {\n      createPromise(i + 1, firstDelay + i * step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delay);\n\n    delay = delay + step;\n  }\n\n  form.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","addEventListener","evt","target","name","value","Number","delay","step","amount","$parcel$interopDefault","Notify","failure","setTimeout","position","delay1","i","Promise","resolve","reject","Math","random","then","param","delay2","success","concat","catch","delay3","preventDefault","i1","_loop","reset"],"version":3,"file":"03-promises.cde4a742.js.map"}